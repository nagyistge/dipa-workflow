#!/bin/bash
#============================================================================
#
#  Program:     DTI ToolKit (DTI-TK)
#  Module:      $RCSfile: scalar_rigid_population,v $
#  Language:    bash
#  Date:        $Date: 2012/02/08 18:45:29 $
#  Version:     $Revision: 1.2 $
#
#  Copyright (c) Gary Hui Zhang (garyhuizhang@gmail.com).
#  All rights reserverd.
#
#  DTI-TK is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DTI-TK is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DTI-TK.  If not, see <http://www.gnu.org/licenses/>.
#============================================================================

#
# rigid alignment of a set of scalar volumes to some template with iterative
# template optimization
#

# check DTITK_ROOT variable
if [ -z "${DTITK_ROOT}" ]
then
	echo "Environment variable DTITK_ROOT is not defined"
	exit 1
fi

# source dtitk_common.sh
. ${DTITK_ROOT}/scripts/dtitk_common.sh

if [ $# -lt 4 ]
then
	echo "Rigid aligment of a set of scalar volumes to a template with iterative template optimization"
	echo "Usage: `basename $0` initial_template subject_list_file SMOption no_of_iterations"
	echo "Available SMOptions:"
	echo "1) SSD: Sum of Squared Differences in intensity"
	echo "2) MI: Mutual Information"
	echo "3) NMI: Normalized Mutual Information"
	exit 1
fi

log=scalar_rigid_population.log
echo "command: " $* | tee ${log}
date | tee -a ${log}

template=$1
subjects=$2
smoption=$3
iter=$4

cp $template mean_rigid0.nii.gz
subjects_aff=`echo $subjects | sed -e 's/.txt/_aff.txt/'`
rm -fr ${subjects_aff}
rm -fr rigid.txt
for subj in `cat ${subjects}`
do
	pref=`getTVPrefix ${subj}`
	echo ${pref}_aff.nii.gz >> ${subjects_aff}
	echo ${pref}.aff >> rigid.txt
done

jid=srp_"$$"
count=1
while [ $count -le $iter ]
do
	echo "scalar_rigid_population iteration" $count | tee -a ${log}
	let oldcount=count-1
	scalar_rigid_sn mean_rigid${oldcount}.nii.gz ${subjects} ${smoption} 1
	affine3DShapeAverage rigid.txt mean_rigid${oldcount}.nii.gz average_inv.aff 1
	for aff in `cat rigid.txt`
	do
		affine3Dtool -in $aff -compose average_inv.aff -out $aff
		subj=`echo $aff | sed -e 's/.aff//'`
		if [ "${DTITK_USE_QSUB}" -eq 1 ]
		then
			jname=${jid}_${subj}
			jname=`echo $jname | sed -e 's/\//_/g'`
			${dtitk_qsub} -cwd -e /dev/null -o /dev/null -b y -N ${jname} ${DTITK_ROOT}/bin/affineScalarVolume -in ${subj}.nii.gz -trans $aff -target mean_rigid${oldcount}.nii.gz -out ${subj}_aff.nii.gz
		else
			affineScalarVolume -in ${subj}.nii.gz -trans $aff -target mean_rigid${oldcount}.nii.gz -out ${subj}_aff.nii.gz
		fi
	done
	if [ "${DTITK_USE_QSUB}" -eq 1 ]
	then
		${dtitk_qsub} -sync y -hold_jid ${jid}_* -o /dev/null -e /dev/null -b y echo "done" > /dev/null
	fi
	rm -fr average_inv.aff
	if [ "${DTITK_USE_QSUB}" -eq 1 ]
	then
		${dtitk_qsub} -cwd -o /dev/null -e /dev/null -b y -N ${jid} ${DTITK_ROOT}/bin/SVMean -in ${subjects_aff} -outMean mean_rigid${count}.nii.gz -outStd meanstd_rigid${count}.nii.gz
		${dtitk_qsub} -sync y -hold_jid ${jid} -o /dev/null -e /dev/null -b y echo "done" > /dev/null
	else
		SVMean -in ${subjects_aff} -outMean mean_rigid${count}.nii.gz -outStd meanstd_rigid${count}.nii.gz
	fi
	SVtool -in mean_rigid${oldcount}.nii.gz -sm mean_rigid${count}.nii.gz | grep Similarity | tee -a ${log}
	let count=count+1
done

